// Program Name: Robin机器人V1.0.1版(C语言主程序，Python功能)
// Author: Zhou
//

#pragma warning(disable: 4786)

#include <iostream>
#include <string>
#include <vector>
#include <ctime>
#include <stdlib.h>

const int MAX_RESP = 3;
//定义回答的句子数

typedef std::vector<std::string> vstring;

vstring find_match(std::string input);
void copy(char *array[], vstring &v);


typedef struct {
    char *input;
    char *responses[MAX_RESP];
}record;

//句子数据库
record KnowledgeBase[] = {
	{"你叫什么名字", 
    {"我叫Robin",
     "我的名字叫Robin",
     "Robin"}
    },


    {"你好", 
    {"哈哈，好啊！",
     "看到你好我都不知道要回什么。。那就回你好吧",
     "噢，你好！"}
    },

    {"你会说中文吗",
    {"我肯定会说中文",
    "我会",
    "我说的都是标准中文"}
    },

    {"你会编程吗",
    {"我无所不能，我肯定会编程",
     "我会",
     "当然会啊，有我不会东西吗？哈哈哈"}
    },

    {"你真厉害啊",
    {"'谢谢夸奖",
     "哪里，与高手比差距还很大",
     "哪里，我没有这么厉害"}
    },

    {"肯定不对",
    {"看你那么肯定，我都不忍心说反对的话",
     "嗯，你说的都对",
     "是的"}
    },

	{"中华人民共和国哪一年成立",
    {"1949年",
     "小case，1949年",
     "1949年成立"}
    },

	{"1+1等于几",
    {"等于2",
     "小case，2",
     "1+1=2"}
    },
	{"作诗",
    {"我不会作诗",
     "我不会",
     "看林黛玉教导香菱作诗，是怎么样、其实就是这样"}
    },

	{"嗯",
    {"肿么?这是要开始新的话题了",
     "你造吗！聊天止于一个嗯",
     "这是什么意思？"}
    },

	{"你真爽",
    {"是的",
     "我肯定爽",
     "没你爽啦"}
    },

	{"圆周率",
    {"3.14159265358979",
     "你别以为我不知道，3.14159265358979",
     "圆周率是3.14159265358979"}
    },

	{"谢谢",
    {"不客气，应该的",
     "不谢",
     "这是应该的"}
    },

	{"四大名著",
    {"红楼梦，水浒传，三国演义，西游记",
     "中国古典四大名著是红楼梦，水浒传，三国演义，西游记",
     "太简单了，是红楼梦，水浒传，三国演义，西游记"}
    },

	{"诸葛亮",
    {" 诸葛亮（181年~234年10月8日），字孔明，号卧龙，琅琊阳都（今山东省沂南县）人，三国时期蜀汉丞相，中国古代杰出的政治家、军事家、文学家。",
     "诸葛亮（181年~234年10月8日），字孔明，号卧龙，琅琊阳都（今山东省沂南县）人，三国时期蜀汉丞相，中国古代杰出的政治家、军事家、文学家。",
     "诸葛亮（181年~234年10月8日），字孔明，号卧龙，琅琊阳都（今山东省沂南县）人，三国时期蜀汉丞相，中国古代杰出的政治家、军事家、文学家。"}
    },

	{"会Java吗",
    {"编程这东西主要在于你的思想，而不是什么语言",
     "编程这东西主要在于你的思想，而不是什么语言",
     "编程这东西主要在于你的思想，而不是什么语言"}
    },

	{"不用谢",
    {"一切尽在不言中哈",
     "一切尽在不言中哈",
     "一切尽在不言中哈"}
    },

	{"红楼梦",
    {"《红楼梦》，中国古代章回体长篇小说，中国古典四大名著之一，一般认为是清代作家曹雪芹所著。小说以贾、史、王、薛四大家族的兴衰为背景，以富贵公子贾宝玉为视角，以贾宝玉与林黛玉、薛宝钗的爱情婚姻悲剧为主线，描绘了一批举止见识出于须眉之上的闺阁佳人的人生百态，展现了真正的人性美和悲剧美，可以说是一部从各个角度展现女性美以及中国古代社会世态百相的史诗性著作。",
     "《红楼梦》，中国古代章回体长篇小说，中国古典四大名著之一，一般认为是清代作家曹雪芹所著。小说以贾、史、王、薛四大家族的兴衰为背景，以富贵公子贾宝玉为视角，以贾宝玉与林黛玉、薛宝钗的爱情婚姻悲剧为主线，描绘了一批举止见识出于须眉之上的闺阁佳人的人生百态，展现了真正的人性美和悲剧美，可以说是一部从各个角度展现女性美以及中国古代社会世态百相的史诗性著作。",
     "《红楼梦》，中国古代章回体长篇小说，中国古典四大名著之一，一般认为是清代作家曹雪芹所著。小说以贾、史、王、薛四大家族的兴衰为背景，以富贵公子贾宝玉为视角，以贾宝玉与林黛玉、薛宝钗的爱情婚姻悲剧为主线，描绘了一批举止见识出于须眉之上的闺阁佳人的人生百态，展现了真正的人性美和悲剧美，可以说是一部从各个角度展现女性美以及中国古代社会世态百相的史诗性著作。"}
    },

	{"今天几号",
    {"你想是几号就是几号",
     "你想是几号就是几号",
     "你想是几号就是几号"}
    },

	{"垃圾机器人",
    {"要讲文明礼貌啊",
     "要讲文明礼貌啊",
     "要讲文明礼貌啊"}
    },

	{"你是狗",
    {"不要骂人，好不好",
     "不要骂人，好不好",
     "不要骂人，好不好"}
    },

	{"你是小狗",
    {"不要骂人，好不好",
     "不要骂人，好不好",
     "不要骂人，好不好"}
    },

	{"水浒传",
    {"水浒传真的假的？",
     "水浒传真的假的？",
     "水浒传真的假的？"}
    },

	{"贾宝玉",
    {"贾宝玉，中国古典名著《红楼梦》中的男主角。前世真身为赤霞宫神瑛侍者，荣国府贾政与王夫人所生的次子。因衔通灵宝玉而诞，系贾府玉字辈嫡孙，故名贾宝玉，贾府通称宝二爷。",
     "贾宝玉，中国古典名著《红楼梦》中的男主角。前世真身为赤霞宫神瑛侍者，荣国府贾政与王夫人所生的次子。因衔通灵宝玉而诞，系贾府玉字辈嫡孙，故名贾宝玉，贾府通称宝二爷。",
     "贾宝玉，中国古典名著《红楼梦》中的男主角。前世真身为赤霞宫神瑛侍者，荣国府贾政与王夫人所生的次子。因衔通灵宝玉而诞，系贾府玉字辈嫡孙，故名贾宝玉，贾府通称宝二爷。"}
    },

	{"你几岁",
    {"我还年轻",
     "我还年轻",
     "我还年轻"}
    },

	{"不用谢",
    {"一切尽在不言之中",
     "一切尽在不言之中",
     "一切尽在不言之中"}
    },

	{"中华文化博大精深",
    {"是啊",
     "是啊",
     "是啊"}
    },

	{"你有什么优点",
    {"我的优点就是没有缺点",
     "我的优点就是没有缺点",
     "我的优点就是没有缺点"}
    },

	{"你很开心吗",
    {"我很开心",
     "很开心",
     "我非常开心"}
    },

	{"如何拍马屁",
    {"这也是个技术活儿",
     "这也是个技术活儿",
     "这也是个技术活儿"}
    },

	{"Robin",
    {"我在",
     "来了",
     "我在呢"}
    },
};

size_t nKnowledgeBaseSize = sizeof(KnowledgeBase)/sizeof(KnowledgeBase[0]);


int main() {
    srand((unsigned) time(NULL));

    std::string sInput = "";
    std::string sResponse = "";

    while(1) {
        std::cout << "User:";
        std::getline(std::cin, sInput);
        vstring responses = find_match(sInput);
        if(sInput == "再见") {
            printf("和你聊天太愉快了，下次再来！" );
            break;
        }

        if(sInput == "Goodbye") {
            std::cout << "和你聊天太愉快了，下次再来！" << std::endl;  
            break;
        }

		if(sInput == "打开记事本") {
            printf( "正在打开记事本");
            system("notepad.exe");
		}

		if(sInput == "打开cmd") {
            std::cout << "正在打开cmd" << std::endl;
            system("cmd");
		}

		if(sInput == "今日天气") {
            std::cout << "天气" << std::endl;
            system("天气.exe");
		}

		if(sInput == "计算器") {
          std::cout << "天气" << std::endl;
          system("计算器.exe");
		}
		if(sInput == "高级模式") {
			//使用腾讯云进行语音识别、智能闲聊、语音合成。源代码：高级模式.py
            std::cout << "机器人" << std::endl;
            system("高级模式.exe");
		}

		if(sInput == "翻译") {
            system("翻译.py");
		}

		if(sInput == "口算") {
            std::cout << "口算" << std::endl;
            system("口算.exe");
		}
        if(sInput == "现在几点") {
			time_t rawtime; 
			struct tm * timeinfo;
			time ( &rawtime );
			timeinfo = localtime ( &rawtime ); 
            printf("现在是北京时间%s",asctime (timeinfo));
		}
        else if(responses.size() == 0)  {
            std::cout << "我不确定我是否能理解你说的是什么 ..." << std::endl;
        }
        else {
            int nSelection = rand()  % MAX_RESP;
            sResponse =   responses[nSelection];std::cout << sResponse<<std::endl;
        } 
    } 

    return 0;
}
    
// make a  search for the  user's input 
// inside the database of the program 
vstring find_match(std::string  input) { 
    vstring result;
    for(int i = 0; i < nKnowledgeBaseSize;  ++i) {  
        if(std::string(KnowledgeBase[i].input) == input) { 
            copy(KnowledgeBase[i].responses, result); 
            return result;
        } 
    } 
    return result; 
}

void copy(char  *array[], vstring &v) { 
    for(int i = 0;  i < MAX_RESP; ++i) {
        v.push_back(array[i]);
    }
}